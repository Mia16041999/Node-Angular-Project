{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserStory } from 'src/app/models/user-story.model';\nlet UserStoryFormComponent = class UserStoryFormComponent {\n  constructor(userStoryService, route, router) {\n    this.userStoryService = userStoryService;\n    this.route = route;\n    this.router = router;\n    this.userStory = new UserStory();\n    this.editMode = false;\n    this.userStories = []; // Array to hold user stories\n  }\n\n  ngOnInit() {\n    const title = this.route.snapshot.params['title']; // Change 'id' to 'title'\n    if (title) {\n      this.editMode = true;\n      // Pass the title as the argument\n      this.userStoryService.getUserStoryByTitle(title).subscribe(data => {\n        this.userStory = data;\n      });\n    }\n    // Load existing user stories\n    this.userStoryService.getUserStories().subscribe(data => {\n      this.userStories = data;\n    });\n  }\n  saveUserStory() {\n    if (this.editMode) {\n      this.userStoryService.updateUserStoryByName(this.userStory.title, this.userStory).subscribe(() => {\n        // No navigation in edit mode\n      });\n    } else {\n      const newUserStory = new UserStory();\n      newUserStory.title = this.userStory.title;\n      newUserStory.description = this.userStory.description;\n      this.userStoryService.addUserStory(newUserStory).subscribe(newStory => {\n        this.userStories.push(newStory);\n        this.userStory = new UserStory(); // Reset the form after adding\n      });\n    }\n  }\n\n  editUserStory(title) {\n    console.log('Editing story with name:', title);\n    this.router.navigate(['/edit-story', title]);\n  }\n  deleteUserStory(title) {\n    console.log('Deleting story with title:', title);\n    // Check if the story with the given title exists in the userStories array\n    const existingStory = this.userStories.find(story => story.title === title);\n    if (existingStory) {\n      // Call the service to delete the user story by its title\n      this.userStoryService.deleteUserStoryByName(title).subscribe(() => {\n        // Remove the deleted story from the array\n        this.userStories = this.userStories.filter(story => story.title !== title);\n      });\n    } else {\n      // Handle the case where the story was not found\n      console.error('Story not found');\n    }\n  }\n};\nUserStoryFormComponent = __decorate([Component({\n  selector: 'app-user-story-form',\n  templateUrl: './user-story-form.component.html',\n  styleUrls: ['./user-story-form.component.scss']\n})], UserStoryFormComponent);\nexport { UserStoryFormComponent };","map":{"version":3,"mappings":"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","names":["Component","UserStory","UserStoryFormComponent","constructor","userStoryService","route","router","ngOnInit","title","snapshot","params","editMode","getUserStoryByTitle","subscribe","data","userStory","getUserStories","userStories","saveUserStory","updateUserStoryByName","newUserStory","description","addUserStory","newStory","push","editUserStory","console","log","navigate","deleteUserStory","existingStory","find","story","deleteUserStoryByName","filter","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\HP\\Downloads\\web-learning-app-main\\web-learning-app-main\\frontend-angular\\src\\app\\components\\FlashCardForm\\FlashCardForm.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserStoryService } from 'src/app/services/user-story.service';\r\nimport { UserStory } from 'src/app/models/user-story.model';\r\n\r\n@Component({\r\n    selector: 'app-user-story-form',\r\n    templateUrl: './user-story-form.component.html',\r\n    styleUrls: ['./user-story-form.component.scss'],\r\n})\r\nexport class UserStoryFormComponent implements OnInit {\r\n    userStory: UserStory = new UserStory();\r\n    editMode: boolean = false;\r\n    userStories: UserStory[] = []; // Array to hold user stories\r\n\r\n    constructor(\r\n        private userStoryService: UserStoryService,\r\n        private route: ActivatedRoute,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const title = this.route.snapshot.params['title']; // Change 'id' to 'title'\r\n        if (title) {\r\n            this.editMode = true;\r\n    \r\n            // Pass the title as the argument\r\n            this.userStoryService.getUserStoryByTitle(title).subscribe((data) => {\r\n                this.userStory = data;\r\n            });\r\n        }\r\n    \r\n        // Load existing user stories\r\n        this.userStoryService.getUserStories().subscribe((data) => {\r\n            this.userStories = data;\r\n        });\r\n    }\r\n    \r\n    saveUserStory() {\r\n        if (this.editMode) {\r\n            this.userStoryService.updateUserStoryByName(this.userStory.title, this.userStory).subscribe(() => {\r\n                // No navigation in edit mode\r\n            });\r\n        } else {\r\n            const newUserStory = new UserStory();\r\n            newUserStory.title = this.userStory.title;\r\n            newUserStory.description = this.userStory.description;\r\n\r\n            this.userStoryService.addUserStory(newUserStory).subscribe((newStory) => {\r\n                this.userStories.push(newStory);\r\n\r\n                this.userStory = new UserStory(); // Reset the form after adding\r\n            });\r\n        }\r\n    }\r\n\r\n    editUserStory(title: string) {\r\n        console.log('Editing story with name:', title);\r\n\r\n        this.router.navigate(['/edit-story', title]);\r\n    }\r\n\r\n    deleteUserStory(title: string) {\r\n        console.log('Deleting story with title:', title);\r\n    \r\n        // Check if the story with the given title exists in the userStories array\r\n        const existingStory = this.userStories.find((story) => story.title === title);\r\n    \r\n        if (existingStory) {\r\n            // Call the service to delete the user story by its title\r\n            this.userStoryService.deleteUserStoryByName(title).subscribe(() => {\r\n                // Remove the deleted story from the array\r\n                this.userStories = this.userStories.filter((story) => story.title !== title);\r\n            });\r\n        } else {\r\n            // Handle the case where the story was not found\r\n            console.error('Story not found');\r\n        }\r\n    }\r\n    \r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}