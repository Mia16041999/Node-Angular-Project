{"ast":null,"code":"import { Flashcard } from 'src/app/models/FlashCard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/FlashCardService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FlashCardFormComponent_tr_28_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FlashCardFormComponent_tr_28_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const card_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editFlashcard(card_r1.id));\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FlashCardFormComponent_tr_28_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function FlashCardFormComponent_tr_28_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const card_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteFlashcard(card_r1.id));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FlashCardFormComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, FlashCardFormComponent_tr_28_button_8_Template, 2, 0, \"button\", 10);\n    i0.ɵɵtemplate(9, FlashCardFormComponent_tr_28_button_9_Template, 2, 0, \"button\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r1.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r1.answer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", card_r1.id !== undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", card_r1.id !== undefined);\n  }\n}\nexport class FlashCardFormComponent {\n  constructor(flashcardService, route, router) {\n    this.flashcardService = flashcardService;\n    this.route = route;\n    this.router = router;\n    this.flashcard = new Flashcard(); // Initialize here\n    this.editMode = false;\n    this.flashcards = []; // Array to hold flashcards\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = parseInt(params['id'], 10);\n      if (!isNaN(id)) {\n        this.editMode = true;\n        this.flashcardService.getFlashcardById(id).subscribe(data => {\n          this.flashcard = data;\n        }, error => {\n          console.error('Error fetching flashcard:', error);\n        });\n      } else {\n        this.editMode = false;\n        this.flashcard = new Flashcard();\n        this.fetchFlashcards(); // Load existing flashcards when adding a new one\n      }\n    });\n  }\n\n  saveFlashcard() {\n    if (this.editMode && this.flashcard.id != null) {\n      // Check if id is not null\n      this.flashcardService.updateFlashcard(this.flashcard.id, this.flashcard).subscribe(() => {\n        // Logic after updating the flashcard\n      });\n    } else {\n      this.flashcardService.createFlashcard(this.flashcard).subscribe(newCard => {\n        this.flashcards.push(newCard);\n        this.flashcard = new Flashcard(); // Reset the form after adding\n      });\n    }\n  }\n\n  editFlashcard(id) {\n    if (id !== undefined) {\n      this.flashcardService.getFlashcardById(id).subscribe(data => {\n        this.flashcard = data;\n        this.editMode = true;\n      }, error => {\n        console.error('Error fetching flashcard:', error);\n      });\n    }\n  }\n  deleteFlashcard(id) {\n    if (id !== undefined) {\n      const existingCardIndex = this.flashcards.findIndex(card => card.id === id);\n      if (existingCardIndex !== -1) {\n        this.flashcardService.deleteFlashcard(id).subscribe(() => {\n          this.flashcards.splice(existingCardIndex, 1);\n        });\n      } else {\n        console.error('Flashcard not found');\n      }\n    }\n  }\n  fetchFlashcards() {\n    this.flashcardService.getFlashcards().subscribe(data => {\n      console.log('Received flashcards:', data);\n      this.flashcards = data;\n    });\n  }\n}\nFlashCardFormComponent.ɵfac = function FlashCardFormComponent_Factory(t) {\n  return new (t || FlashCardFormComponent)(i0.ɵɵdirectiveInject(i1.FlashcardService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nFlashCardFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlashCardFormComponent,\n  selectors: [[\"app-flashcard-form\"]],\n  decls: 29,\n  vars: 5,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"question\"], [\"id\", \"question\", \"name\", \"question\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"answer\"], [\"id\", \"answer\", \"name\", \"answer\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"flashcard-table\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"edit-button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"delete-button\", 3, \"click\", 4, \"ngIf\"], [1, \"edit-button\", 3, \"click\"], [1, \"delete-button\", 3, \"click\"]],\n  template: function FlashCardFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FlashCardFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.saveFlashcard();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function FlashCardFormComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.flashcard.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"textarea\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function FlashCardFormComponent_Template_textarea_ngModelChange_8_listener($event) {\n        return ctx.flashcard.question = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"textarea\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function FlashCardFormComponent_Template_textarea_ngModelChange_12_listener($event) {\n        return ctx.flashcard.answer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"table\")(17, \"thead\")(18, \"tr\")(19, \"th\");\n      i0.ɵɵtext(20, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"tbody\");\n      i0.ɵɵtemplate(28, FlashCardFormComponent_tr_28_Template, 10, 5, \"tr\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flashcard.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flashcard.question);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flashcard.answer);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.editMode ? \"Update\" : \"Save\", \" Flashcard\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.flashcards);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  max-width: 500px;\\n  margin: auto;\\n  margin-top: 100px; \\n}\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n}\\nform[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  font-size: 1rem;\\n  color: #495057;\\n  margin-bottom: 5px;\\n}\\nform[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%], form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  border-radius: 4px;\\n  border: 1px solid #ced4da;\\n  font-size: 1rem;\\n  color: #495057;\\n}\\nform[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:focus, form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #80bdff;\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n}\\nform[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n  min-height: 100px;\\n  resize: vertical;\\n}\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n  padding: 10px 15px;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 1rem;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n\\n.user-story-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between; \\n  align-items: center;\\n  margin-bottom: 20px;\\n}\\n\\n.delete-button[_ngcontent-%COMP%], .edit-button[_ngcontent-%COMP%] {\\n  background-color: #dc3545; \\n  color: white;\\n  padding: 5px 10px;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 0.8rem; \\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\n.edit-button[_ngcontent-%COMP%] {\\n  background-color: #007bff; \\n}\\n\\n.small-text[_ngcontent-%COMP%] {\\n  font-size: 0.9rem; \\n}\\n\\n\\nh2[_ngcontent-%COMP%] {\\n  font-size: 1rem; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9GbGFzaENhcmRGb3JtL0ZsYXNoQ2FyZEZvcm0uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQSxFQUFBLHdEQUFBO0FBQ0Y7QUFDRTtFQUNFLG1CQUFBO0FBQ0o7QUFFRTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FBQUo7QUFHRTs7RUFFRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtBQURKO0FBR0k7O0VBQ0UsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0RBQUE7QUFBTjtBQUlFO0VBQ0UsaUJBQUE7RUFDQSxnQkFBQTtBQUZKO0FBS0U7RUFDRSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsaUNBQUE7QUFISjtBQUtJO0VBQ0UseUJBQUE7QUFITjs7QUFPQSxnREFBQTtBQUNBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBLEVBQUEsZ0NBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBSkY7O0FBT0E7O0VBRUUseUJBQUEsRUFBQSxnQ0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBLEVBQUEsa0NBQUE7RUFDQSxlQUFBO0VBQ0EsaUNBQUE7QUFKRjs7QUFPQTtFQUNFLHlCQUFBLEVBQUEsK0JBQUE7QUFKRjs7QUFPQTtFQUNFLGlCQUFBLEVBQUEsMENBQUE7QUFKRjs7QUFPQSwyQ0FBQTtBQUNBO0VBQ0UsZUFBQSxFQUFBLG1DQUFBO0FBSkY7O0FBT0EscUNBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogMTAwcHg7IC8qIEFkanVzdCB0aGUgdG9wIG1hcmdpbiB0byBjZW50ZXIgdGhlIGZvcm0gdmVydGljYWxseSAqL1xyXG5cclxuICBkaXYge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICB9XHJcblxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgY29sb3I6ICM0OTUwNTc7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuICB0ZXh0YXJlYSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgY29sb3I6ICM0OTUwNTc7XHJcblxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogIzgwYmRmZjtcclxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMCwgMTIzLCAyNTUsIDAuMjUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdGV4dGFyZWEge1xyXG4gICAgbWluLWhlaWdodDogMTAwcHg7XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG4gIH1cclxuXHJcbiAgYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi8qIEFkZCB0aGlzIENTUyB0byBzdHlsZSB0aGUgdXNlciBzdG9yeSBsYXlvdXQgKi9cclxuLnVzZXItc3RvcnktY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgLyogQWxpZ25zIGJ1dHRvbnMgdG8gdGhlIHJpZ2h0ICovXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uZGVsZXRlLWJ1dHRvbixcclxuLmVkaXQtYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1OyAvKiBSZWQgY29sb3IgZm9yIGRlbGV0ZSBidXR0b24gKi9cclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBmb250LXNpemU6IDAuOHJlbTsgLyogU21hbGxlciBmb250IHNpemUgZm9yIGJ1dHRvbnMgKi9cclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xyXG59XHJcblxyXG4uZWRpdC1idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7IC8qIEJsdWUgY29sb3IgZm9yIGVkaXQgYnV0dG9uICovXHJcbn1cclxuXHJcbi5zbWFsbC10ZXh0IHtcclxuICBmb250LXNpemU6IDAuOXJlbTsgLyogU21hbGxlciBmb250IHNpemUgZm9yIHVzZXIgc3RvcnkgdGV4dCAqL1xyXG59XHJcblxyXG4vKiBTbWFsbGVyIGZvbnQgc2l6ZSBmb3IgdXNlciBzdG9yeSB0aXRsZSAqL1xyXG5oMiB7XHJcbiAgZm9udC1zaXplOiAxcmVtOyAvKiBBZGp1c3QgdGhlIGZvbnQgc2l6ZSBhcyBuZWVkZWQgKi9cclxufVxyXG5cclxuLyogUmVzdCBvZiB5b3VyIGV4aXN0aW5nIENTUyBzdHlsZXMgKi9cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Flashcard","i0","FlashCardFormComponent","constructor","flashcardService","route","router","ngOnInit","params","subscribe","id","parseInt","isNaN","editMode","getFlashcardById","data","flashcard","error","console","fetchFlashcards","saveFlashcard","updateFlashcard","createFlashcard","newCard","flashcards","push","editFlashcard","undefined","deleteFlashcard","existingCardIndex","findIndex","card","splice","getFlashcards","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\Downloads\\web-learning-app-main\\web-learning-app-main\\frontend-angular\\src\\app\\components\\FlashCardForm\\FlashCardForm.ts","C:\\Users\\HP\\Downloads\\web-learning-app-main\\web-learning-app-main\\frontend-angular\\src\\app\\components\\FlashCardForm\\FlashCardForm.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FlashcardService } from 'src/app/services/FlashCardService';\r\nimport { Flashcard } from 'src/app/models/FlashCard';\r\n\r\n@Component({\r\n    selector: 'app-flashcard-form',\r\n    templateUrl: './FlashCardForm.html',\r\n    styleUrls: ['./FlashCardForm.scss'],\r\n})\r\nexport class FlashCardFormComponent implements OnInit {\r\n    flashcard: Flashcard = new Flashcard(); // Initialize here\r\n    editMode: boolean = false;\r\n    flashcards: Flashcard[] = []; // Array to hold flashcards\r\n\r\n    constructor(\r\n        private flashcardService: FlashcardService,\r\n        private route: ActivatedRoute,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            const id = parseInt(params['id'], 10);\r\n            if (!isNaN(id)) {\r\n                this.editMode = true;\r\n                this.flashcardService.getFlashcardById(id).subscribe(data => {\r\n                    this.flashcard = data;\r\n                }, error => {\r\n                    console.error('Error fetching flashcard:', error);\r\n                });\r\n            } else {\r\n                this.editMode = false;\r\n                this.flashcard = new Flashcard();\r\n                this.fetchFlashcards(); // Load existing flashcards when adding a new one\r\n            }\r\n        });\r\n    }\r\n    \r\n    saveFlashcard() {\r\n        if (this.editMode && this.flashcard.id != null) { // Check if id is not null\r\n            this.flashcardService.updateFlashcard(this.flashcard.id, this.flashcard).subscribe(() => {\r\n                // Logic after updating the flashcard\r\n            });\r\n        } else {\r\n            this.flashcardService.createFlashcard(this.flashcard).subscribe((newCard) => {\r\n                this.flashcards.push(newCard);\r\n                this.flashcard = new Flashcard(); // Reset the form after adding\r\n            });\r\n        }\r\n    }\r\n\r\n    editFlashcard(id: number) {\r\n        if (id !== undefined) {\r\n            this.flashcardService.getFlashcardById(id).subscribe((data) => {\r\n                this.flashcard = data;\r\n                this.editMode = true;\r\n            }, error => {\r\n                console.error('Error fetching flashcard:', error);\r\n            });\r\n        }\r\n    }\r\n    \r\n    \r\n    deleteFlashcard(id: number) {\r\n        if (id !== undefined) {\r\n            const existingCardIndex = this.flashcards.findIndex((card) => card.id === id);\r\n            if (existingCardIndex !== -1) {\r\n                this.flashcardService.deleteFlashcard(id).subscribe(() => {\r\n                    this.flashcards.splice(existingCardIndex, 1);\r\n                });\r\n            } else {\r\n                console.error('Flashcard not found');\r\n            }\r\n        }\r\n    }\r\n    \r\n    private fetchFlashcards() {\r\n        this.flashcardService.getFlashcards().subscribe((data) => {\r\n            console.log('Received flashcards:', data);\r\n            this.flashcards = data;\r\n        });\r\n    }\r\n}\r\n","<!-- Form to create or edit flashcards -->\r\n<form (ngSubmit)=\"saveFlashcard()\">\r\n    <div>\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" id=\"title\" [(ngModel)]=\"flashcard.title\" name=\"title\">\r\n    </div>\r\n    <div>\r\n        <label for=\"question\">Question</label>\r\n        <textarea id=\"question\" [(ngModel)]=\"flashcard.question\" name=\"question\"></textarea>\r\n    </div>\r\n    <div>\r\n        <label for=\"answer\">Answer</label>\r\n        <textarea id=\"answer\" [(ngModel)]=\"flashcard.answer\" name=\"answer\"></textarea>\r\n    </div>\r\n    <button type=\"submit\">{{ editMode ? 'Update' : 'Save' }} Flashcard</button>\r\n</form>\r\n\r\n<!-- Flashcards Table -->\r\n<div class=\"flashcard-table\">\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Title</th>\r\n                <th>Question</th>\r\n                <th>Answer</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let card of flashcards\">\r\n                <td>{{ card.title }}</td>\r\n                <td>{{ card.question }}</td>\r\n                <td>{{ card.answer }}</td>\r\n                <td>\r\n                    <button *ngIf=\"card.id !== undefined\" (click)=\"editFlashcard(card.id)\" class=\"edit-button\">Edit</button>\r\n                    <button *ngIf=\"card.id !== undefined\" (click)=\"deleteFlashcard(card.id)\" class=\"delete-button\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}